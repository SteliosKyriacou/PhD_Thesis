%!PS-Adobe-2.0 EPSF-2.0
%%Title: manConv.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Mar 29 14:41:57 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 301 226
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
940 600 M
3760 0 V
1.000 UL
LTb
940 600 M
63 0 V
3697 0 R
-63 0 V
stroke
820 600 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.82)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
940 984 M
1140 0 V
2343 0 R
277 0 V
1.000 UL
LTb
940 984 M
63 0 V
3697 0 R
-63 0 V
stroke
820 984 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.84)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
940 1368 M
1140 0 V
2343 0 R
277 0 V
1.000 UL
LTb
940 1368 M
63 0 V
3697 0 R
-63 0 V
stroke
820 1368 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.86)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
940 1752 M
3760 0 V
1.000 UL
LTb
940 1752 M
63 0 V
3697 0 R
-63 0 V
stroke
820 1752 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.88)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
940 2136 M
3760 0 V
1.000 UL
LTb
940 2136 M
63 0 V
3697 0 R
-63 0 V
stroke
820 2136 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.9)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
940 2520 M
3760 0 V
1.000 UL
LTb
940 2520 M
63 0 V
3697 0 R
-63 0 V
stroke
820 2520 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.92)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
940 2904 M
3760 0 V
1.000 UL
LTb
940 2904 M
63 0 V
3697 0 R
-63 0 V
stroke
820 2904 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.94)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
940 3288 M
3760 0 V
1.000 UL
LTb
940 3288 M
63 0 V
3697 0 R
-63 0 V
stroke
820 3288 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.96)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1.000 UL
LTa
940 600 M
0 2688 V
1.000 UL
LTb
940 600 M
0 63 V
0 2625 R
0 -63 V
stroke
940 400 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1410 600 M
0 2688 V
1.000 UL
LTb
1410 600 M
0 63 V
0 2625 R
0 -63 V
stroke
1410 400 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 250)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1880 600 M
0 2688 V
1.000 UL
LTb
1880 600 M
0 63 V
0 2625 R
0 -63 V
stroke
1880 400 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 500)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2350 600 M
0 268 V
0 600 R
0 1820 V
1.000 UL
LTb
2350 600 M
0 63 V
0 2625 R
0 -63 V
stroke
2350 400 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 750)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2820 600 M
0 268 V
0 600 R
0 1820 V
1.000 UL
LTb
2820 600 M
0 63 V
0 2625 R
0 -63 V
stroke
2820 400 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3290 600 M
0 268 V
0 600 R
0 1820 V
1.000 UL
LTb
3290 600 M
0 63 V
0 2625 R
0 -63 V
stroke
3290 400 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 1250)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3760 600 M
0 268 V
0 600 R
0 1820 V
1.000 UL
LTb
3760 600 M
0 63 V
0 2625 R
0 -63 V
stroke
3760 400 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 1500)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4230 600 M
0 268 V
0 600 R
0 1820 V
1.000 UL
LTb
4230 600 M
0 63 V
0 2625 R
0 -63 V
stroke
4230 400 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 1750)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4700 600 M
0 2688 V
1.000 UL
LTb
4700 600 M
0 63 V
0 2625 R
0 -63 V
stroke
4700 400 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 ( 2000)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
940 600 M
3760 0 V
0 2688 V
-3760 0 V
940 600 L
LTb
200 1944 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (I)]
[(Helvetica) 160.0 -60.0 true true 0 (H)]
] -46.7 MCshow
grestore
grestore
LTb
2820 100 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 (Exact Evaluations)]
] -66.7 MCshow
grestore
1.000 UP
3.000 UL
LT2
LTb
3640 1368 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 (EA)]
] -66.7 MRshow
grestore
LT2
3760 1368 M
543 0 V
1090 665 M
151 1226 V
148 87 V
151 101 V
146 110 V
151 2 V
146 3 V
151 2 V
150 49 V
151 5 V
146 1 V
151 3 V
148 90 V
151 3 V
146 9 V
149 257 V
150 0 V
151 24 V
150 12 V
148 0 V
151 2 V
150 26 V
151 4 V
146 5 V
149 6 V
28 14 V
3.000 UL
LT1
LTb
3640 1168 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 (MAEA\(RBF\))]
] -66.7 MRshow
grestore
LT1
3760 1168 M
543 0 V
1090 665 M
151 1140 V
139 181 V
15 0 V
15 162 V
15 0 V
15 1 V
17 46 V
17 3 V
17 0 V
26 57 V
26 6 V
32 0 V
27 0 V
24 3 V
25 16 V
18 0 V
23 2 V
23 12 V
20 0 V
15 0 V
17 0 V
21 54 V
21 8 V
20 0 V
25 6 V
17 0 V
28 5 V
19 6 V
20 0 V
15 0 V
23 0 V
17 0 V
15 0 V
19 0 V
17 0 V
16 0 V
16 0 V
22 2 V
19 0 V
15 0 V
15 24 V
19 128 V
19 0 V
18 0 V
21 28 V
24 0 V
21 0 V
21 1 V
21 0 V
20 0 V
25 6 V
18 78 V
19 0 V
25 5 V
24 0 V
15 0 V
19 0 V
23 0 V
15 0 V
15 0 V
18 0 V
15 0 V
19 0 V
15 0 V
15 0 V
17 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
16 0 V
16 2 V
15 1 V
16 0 V
18 0 V
17 0 V
21 0 V
19 52 V
22 1 V
21 8 V
23 68 V
18 1 V
21 0 V
24 0 V
19 19 V
21 1 V
19 0 V
19 0 V
20 0 V
19 0 V
19 0 V
19 0 V
18 0 V
15 0 V
15 0 V
16 0 V
18 0 V
21 4 V
19 0 V
15 0 V
stroke
3277 2802 M
19 3 V
18 70 V
23 0 V
21 0 V
24 1 V
17 8 V
19 0 V
19 0 V
20 0 V
21 0 V
19 2 V
19 0 V
20 28 V
19 0 V
21 0 V
20 4 V
19 0 V
21 0 V
21 0 V
20 1 V
17 0 V
21 2 V
21 0 V
18 0 V
21 0 V
21 0 V
19 0 V
20 0 V
23 0 V
20 0 V
19 0 V
19 3 V
17 0 V
24 0 V
15 0 V
15 0 V
19 0 V
17 0 V
15 0 V
15 0 V
19 0 V
19 0 V
15 0 V
24 0 V
19 15 V
19 2 V
19 0 V
20 4 V
19 0 V
25 0 V
24 0 V
19 0 V
19 0 V
20 0 V
15 0 V
15 10 V
16 0 V
15 60 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 2 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
15 0 V
6 8 V
3.000 UL
LT0
LTb
3640 968 M
gsave 0 setgray
[ [(Helvetica) 200.0 0.0 true true 0 (MAEA\(RBF-SOM\))]
] -66.7 MRshow
grestore
LT0
3760 968 M
543 0 V
1090 665 M
151 1140 V
135 181 V
23 0 V
22 0 V
21 0 V
23 6 V
43 62 V
45 134 V
24 0 V
29 79 V
31 0 V
23 0 V
24 0 V
29 130 V
30 0 V
22 192 V
23 0 V
21 12 V
24 23 V
24 7 V
21 21 V
23 0 V
26 0 V
21 3 V
18 0 V
19 48 V
23 0 V
26 1 V
23 1 V
22 1 V
21 0 V
19 0 V
20 0 V
15 3 V
23 0 V
19 0 V
22 0 V
19 0 V
23 0 V
24 0 V
25 1 V
17 0 V
16 0 V
21 0 V
23 0 V
15 0 V
19 0 V
22 11 V
23 0 V
24 15 V
21 0 V
22 1 V
19 0 V
19 7 V
19 0 V
19 0 V
24 13 V
19 51 V
19 0 V
24 0 V
19 0 V
22 1 V
21 17 V
25 0 V
18 0 V
19 0 V
21 0 V
22 0 V
21 0 V
21 0 V
19 0 V
20 0 V
19 0 V
19 0 V
20 0 V
25 1 V
22 0 V
25 0 V
24 0 V
21 26 V
23 24 V
20 7 V
19 0 V
19 0 V
21 0 V
20 0 V
23 39 V
19 1 V
28 20 V
19 0 V
18 6 V
19 8 V
23 0 V
24 51 V
19 2 V
23 0 V
22 1 V
19 0 V
28 2 V
23 0 V
22 0 V
19 26 V
stroke
3587 3040 M
23 0 V
18 0 V
21 0 V
23 6 V
18 0 V
21 0 V
21 0 V
32 0 V
22 6 V
19 4 V
21 0 V
24 0 V
19 0 V
21 0 V
19 0 V
18 6 V
23 0 V
19 0 V
18 0 V
25 0 V
19 1 V
26 4 V
19 0 V
19 0 V
18 8 V
23 0 V
23 0 V
18 0 V
30 0 V
19 0 V
23 0 V
22 0 V
19 0 V
23 9 V
20 0 V
25 0 V
22 0 V
29 0 V
22 0 V
21 0 V
22 0 V
30 0 V
21 0 V
21 5 V
11 0 V
21 0 V
26 0 V
25 0 V
18 0 V
27 0 V
9 0 V
17 0 V
1.000 UL
LTb
940 600 M
3760 0 V
0 2688 V
-3760 0 V
940 600 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
ca
